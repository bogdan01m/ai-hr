from pydantic_ai import RunContext
from typing import List, Optional, Any, Dict
import uuid
import os

from ..shared.schemas import ProfileContext
from ..shared.logger_config import log_profile_update
from ..shared.google_sheets import get_sheets_manager


async def update_position_info(
    ctx: RunContext[ProfileContext],
    title: Optional[str] = None,
    experience_years: Optional[int] = None,
    company_field: Optional[str] = None,
) -> str:
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–∑–∏—Ü–∏–∏ –≤ –ø—Ä–æ—Ñ–∏–ª–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞"""
    updates: Dict[str, Any] = {}
    if title:
        ctx.deps.profile.position.title = title
        updates["title"] = title
    if experience_years is not None:
        ctx.deps.profile.position.experience_years = experience_years
        updates["experience_years"] = experience_years
    if company_field:
        ctx.deps.profile.position.company_field = company_field
        updates["company_field"] = company_field

    stage = ctx.deps.get_current_stage()
    log_profile_update("unknown", stage, "position_info", updates)

    return f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–∑–∏—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∞. –¢–µ–∫—É—â–∏–π —ç—Ç–∞–ø: {stage}"


async def update_hard_skills(
    ctx: RunContext[ProfileContext],
    programming_languages: Optional[List[str]] = None,
    frameworks: Optional[List[str]] = None,
    tools: Optional[List[str]] = None,
    certifications: Optional[List[str]] = None,
) -> str:
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏ –≤ –ø—Ä–æ—Ñ–∏–ª–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞"""
    if programming_languages:
        ctx.deps.profile.hard_skills.programming_languages = programming_languages
    if frameworks:
        ctx.deps.profile.hard_skills.frameworks = frameworks
    if tools:
        ctx.deps.profile.hard_skills.tools = tools
    if certifications:
        ctx.deps.profile.hard_skills.certifications = certifications

    return f"–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã. –¢–µ–∫—É—â–∏–π —ç—Ç–∞–ø: {ctx.deps.get_current_stage()}"


async def update_soft_skills(
    ctx: RunContext[ProfileContext],
    personal_qualities: Optional[List[str]] = None,
    communication_skills: Optional[List[str]] = None,
    team_skills: Optional[List[str]] = None,
    leadership_skills: Optional[List[str]] = None,
) -> str:
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –ª–∏—á–Ω–æ—Å—Ç–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ –≤ –ø—Ä–æ—Ñ–∏–ª–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞"""
    if personal_qualities:
        ctx.deps.profile.soft_skills.personal_qualities = personal_qualities
    if communication_skills:
        ctx.deps.profile.soft_skills.communication_skills = communication_skills
    if team_skills:
        ctx.deps.profile.soft_skills.team_skills = team_skills
    if leadership_skills:
        ctx.deps.profile.soft_skills.leadership_skills = leadership_skills

    return f"–õ–∏—á–Ω–æ—Å—Ç–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã. –¢–µ–∫—É—â–∏–π —ç—Ç–∞–ø: {ctx.deps.get_current_stage()}"


async def update_work_conditions(
    ctx: RunContext[ProfileContext],
    work_format: Optional[str] = None,
    salary_expectations: Optional[str] = None,
    benefits: Optional[List[str]] = None,
    travel_readiness: Optional[bool] = None,
) -> str:
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —É—Å–ª–æ–≤–∏—è —Ä–∞–±–æ—Ç—ã –≤ –ø—Ä–æ—Ñ–∏–ª–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞"""
    if work_format:
        ctx.deps.profile.work_conditions.work_format = work_format
    if salary_expectations:
        ctx.deps.profile.work_conditions.salary_expectations = salary_expectations
    if benefits:
        ctx.deps.profile.work_conditions.benefits = benefits
    if travel_readiness is not None:
        ctx.deps.profile.work_conditions.travel_readiness = travel_readiness

    return f"–£—Å–ª–æ–≤–∏—è —Ä–∞–±–æ—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã. –¢–µ–∫—É—â–∏–π —ç—Ç–∞–ø: {ctx.deps.get_current_stage()}"


async def get_profile_status(ctx: RunContext[ProfileContext]) -> str:
    """–ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è"""
    stage = ctx.deps.get_current_stage()
    profile = ctx.deps.profile

    if stage == "complete":
        return f"""
–ü–†–û–§–ò–õ–¨ –ö–ê–ù–î–ò–î–ê–¢–ê –ó–ê–í–ï–†–®–ï–ù:

–ü–û–ó–ò–¶–ò–Ø:
- –ù–∞–∑–≤–∞–Ω–∏–µ: {profile.position.title}
- –û–ø—ã—Ç: {profile.position.experience_years} –ª–µ—Ç
- –°—Ñ–µ—Ä–∞: {profile.position.company_field}

–¢–ï–•–ù–ò–ß–ï–°–ö–ò–ï –ù–ê–í–´–ö–ò:
- –Ø–∑—ã–∫–∏: {profile.hard_skills.programming_languages or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
- –§—Ä–µ–π–º–≤–æ—Ä–∫–∏: {profile.hard_skills.frameworks or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
- –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã: {profile.hard_skills.tools or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
- –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {profile.hard_skills.certifications or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}

–õ–ò–ß–ù–û–°–¢–ù–´–ï –ù–ê–í–´–ö–ò:
- –ö–∞—á–µ—Å—Ç–≤–∞: {profile.soft_skills.personal_qualities or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
- –ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è: {profile.soft_skills.communication_skills or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
- –†–∞–±–æ—Ç–∞ –≤ –∫–æ–º–∞–Ω–¥–µ: {profile.soft_skills.team_skills or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
- –õ–∏–¥–µ—Ä—Å—Ç–≤–æ: {profile.soft_skills.leadership_skills or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}

–£–°–õ–û–í–ò–Ø –†–ê–ë–û–¢–´:
- –§–æ—Ä–º–∞—Ç: {profile.work_conditions.work_format}
- –ó–∞—Ä–ø–ª–∞—Ç–∞: {profile.work_conditions.salary_expectations}
- –ë–µ–Ω–µ—Ñ–∏—Ç—ã: {profile.work_conditions.benefits or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
- –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∞–º: {profile.work_conditions.travel_readiness}

–•–æ—Ç–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —ç—Ç–æ—Ç –ø—Ä–æ—Ñ–∏–ª—å –≤ Google –¢–∞–±–ª–∏—Ü—É? –û—Ç–≤–µ—Ç—å—Ç–µ "–¥–∞" –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è.
"""
    else:
        return f"–¢–µ–∫—É—â–∏–π —ç—Ç–∞–ø: {stage}. –ü—Ä–æ—Ñ–∏–ª—å –∑–∞–ø–æ–ª–Ω–µ–Ω –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é."


async def save_profile_to_sheets(ctx: RunContext[ProfileContext]) -> str:
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –≤ Google Sheets"""
    stage = ctx.deps.get_current_stage()

    if stage != "complete":
        return (
            "–û—à–∏–±–∫–∞: –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å."
        )

    try:
        sheets_manager = get_sheets_manager()
        if not sheets_manager:
            return "–û—à–∏–±–∫–∞: Google Sheets –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è GOOGLE_SPREADSHEET_ID –∏ GOOGLE_CREDENTIALS_PATH."

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –ø—Ä–æ—Ñ–∏–ª—è
        profile_id = str(uuid.uuid4())[:8]

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å
        success = sheets_manager.save_profile(ctx.deps.profile, profile_id)

        if success:
            log_profile_update(
                "unknown", "saved", "google_sheets", {"profile_id": profile_id}
            )

            # –ü–æ–ª—É—á–∞–µ–º ID —Ç–∞–±–ª–∏—Ü—ã –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
            spreadsheet_id = os.getenv("GOOGLE_SPREADSHEET_ID")
            sheets_link = f"https://docs.google.com/spreadsheets/d/{spreadsheet_id}/edit?gid=0#gid=0"

            return f"‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ Google –¢–∞–±–ª–∏—Ü—É! ID –ø—Ä–æ—Ñ–∏–ª—è: {profile_id}\n\nüîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–∞–±–ª–∏—Ü—É: {sheets_link}"
        else:
            return "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è –≤ Google –¢–∞–±–ª–∏—Ü—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π."

    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: {str(e)}"
